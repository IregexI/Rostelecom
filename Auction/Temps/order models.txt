from django.db import models
from django.contrib.auth.models import User
from product.models import Product
from django.forms import ModelForm

class ShopCart(models.Model):
    user = models.ForeignKey(User,on_delete=models.SET_NULL,null=True)
    product = models.ForeignKey(Product,on_delete=models.SET_NULL,null=True)
    quantity = models.IntegerField()

    def __str__(self):
        return self.product.title

    @property
    def price(self):
        return self.product.price

    @property
    def amount(self):
        return (self.quantity * self.product.price)

#from django.forms import ModelForm
class ShopCartForm(ModelForm):
    class Meta:
        model=ShopCart
        fields=['quantity']


class Order(models.Model):
    STATUS = (
        ('New', 'New'),
        ('Accepted', 'Accepted'),
        ('Preaparing', 'Preaparing'),
        ('OnShipping', 'OnShipping'),
        ('Completed', 'Completed'),
        ('Canceled', 'Canceled'),
    )
    user = models.ForeignKey(User, on_delete=models.SET_NULL, null=True)
    code = models.CharField(max_length=5, editable=False )
    first_name = models.CharField(max_length=10)
    last_name = models.CharField(max_length=10)
    phone = models.CharField(blank=True, max_length=20)
    address = models.CharField(blank=True, max_length=150)
    city = models.CharField(blank=True, max_length=20)
    country = models.CharField(blank=True, max_length=20)
    total = models.FloatField()
    status=models.CharField(max_length=10,choices=STATUS,default='New')
    ip = models.CharField(blank=True, max_length=20)
    adminnote = models.CharField(blank=True, max_length=100)
    create_at=models.DateTimeField(auto_now_add=True)
    update_at=models.DateTimeField(auto_now=True)

    #Относится к модели Order
    def __str__(self):
        return self.user.first_name

class OrderForm(ModelForm):
    class Meta:
        model = Order
        fields = ['first_name','last_name','address','phone','city','country']

class OrderProduct(models.Model):
    STATUS = (
        ('New', 'New'),
        ('Accepted', 'Accepted'),
        ('Canceled', 'Canceled'),
    )
    order = models.ForeignKey(Order, on_delete=models.CASCADE)
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    quantity = models.IntegerField()
    price = models.FloatField()
    amount = models.FloatField()
    status = models.CharField(max_length=10, choices=STATUS, default='New')
    create_at = models.DateTimeField(auto_now_add=True)
    update_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.product.title

    # from .models import ShopCart, Order, OrderProduct
    # class OrderProductline(admin.TabularInline):
    #     model = OrderProduct
    #     readonly_fields = ('user', 'product','price','quantity','amount')
    #     can_delete = False
    #     extra = 0
    # class OrderAdmin(admin.ModelAdmin):
    #     list_display = ['first_name', 'last_name','phone','city','total','status']
    #     list_filter = ['status']
    #     readonly_fields = ('user','address','city','country','phone','first_name',
    #                        'ip', 'last_name','phone','city','total')
    #     can_delete = False
    #     inlines = [OrderProductline]
    # class OrderProductAdmin(admin.ModelAdmin):
    #     list_display = ['user', 'product','price','quantity','amount']
    #     list_filter = ['user']
    # admin.site.register(Order,OrderAdmin)
    # admin.site.register(OrderProduct,OrderProductAdmin)
